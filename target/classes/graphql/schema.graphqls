type Query {
  findAll: [User]
  userById(userId: Int): User
  findCustomers: [Customer]!
  customerById(id: Int): Customer
  customerByEmail(email: String): Customer
  findProducts: [Product]!
  productById(id: String): Product
}

type Mutation {
  createUser(firstName: String, lastName: String, email: String, password: String): User
  addCustomer(input: CustomerInput): Customer
}

type User {
  id: ID!
  firstName: String!
  lastName: String
  email: String!
  password: String!
}

type Customer {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  address: String!
  city: String!
  state: String!
  zipCode: String!
}

type Product {
    id: ID!
    name: String!
    size: Int!
    variety: String!
    price: Float!
    status: String!
}

input CustomerInput {
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  address: String!
  city: String!
  state: String!
  zipCode: String!
}