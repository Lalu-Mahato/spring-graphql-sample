type Customer {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  address: String!
  city: String!
  state: String!
  zipCode: String!
}

type Product {
  id: ID!
  name: String!
  size: Int!
  variety: String!
  price: Float!
  status: String!
}

type Salesperson {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  address: String!
  city: String!
  state: String!
  zipCode: String!
}

type Order {
    id: ID!
    customer: Customer,
    salesperson: Salesperson,
    orderLines: [OrderLine]!
}

type OrderLine {
    id: ID!
    order: Order
    product: Product
    quantity: Int
}

input CustomerInput {
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  address: String!
  city: String!
  state: String!
  zipCode: String!
}

type Query {
  findCustomers: [Customer]!
  customerById(id: Int): Customer
  customerByEmail(email: String): Customer
  findProducts: [Product]!
  productById(id: String): Product
  salespersonById(id: Int): Salesperson
  salespersonByEmail(email: String): Salesperson
  findOrders: [Order]!
  orderById(id: String): Order
}

type Mutation {
  addCustomer(input: CustomerInput): Customer
}